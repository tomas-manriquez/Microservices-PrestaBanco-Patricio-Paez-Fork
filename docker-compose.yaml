version: "3.9"

services:
  config-server:
    image: tomasmanriquez480/config-server:latest
    platform: "linux/amd64"
    ports:
      - "8888:8888"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8888/actuator/health" ]
      interval: 5s
      timeout: 3s
      retries: 10
    networks:
      - microservices

  eureka-server:
    image: tomasmanriquez480/eureka-server:latest
    platform: "linux/amd64"
    ports:
      - "8761:8761"
    depends_on:
      config-server:
        condition: service_healthy
    env_file:
      - eureka-server/eureka.env
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8761/actuator/health" ]
      interval: 5s
      timeout: 3s
      retries: 10
    networks:
      - microservices

  gateway-server:
    image: tomasmanriquez480/gateway-server:latest
    platform: "linux/amd64"
    ports:
      - "8080:8080"
    depends_on:
      config-server:
        condition: service_healthy
      eureka-server:
        condition: service_healthy
    env_file:
      - ./env/gateway.env
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/actuator/health" ]
      interval: 5s
      timeout: 3s
      retries: 10
    networks:
      - microservices

  customer-db:
    image: postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=admin
      - POSTGRES_DB=customer-db
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d customer-db"]
      interval: 5s
      timeout: 5s
      retries: 10
    volumes:
      - customer-db-data:/var/lib/postgresql/data
    networks:
      - microservices

  executive-db:
    image: postgres
    ports:
      - "5433:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=admin
      - POSTGRES_DB=executive-db
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d executive-db"]
      interval: 5s
      timeout: 5s
      retries: 10
    volumes:
      - executive-db-data:/var/lib/postgresql/data
    networks:
      - microservices

  loan-db:
    image: postgres
    ports:
      - "5434:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=admin
      - POSTGRES_DB=loan-db
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d loan-db"]
      interval: 5s
      timeout: 5s
      retries: 10
    volumes:
      - loan-db-data:/var/lib/postgresql/data
    networks:
      - microservices

  request-db:
    image: postgres
    ports:
      - "5435:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=admin
      - POSTGRES_DB=request-db
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d request-db"]
      interval: 5s
      timeout: 5s
      retries: 10
    volumes:
      - request-db-data:/var/lib/postgresql/data
    networks:
      - microservices

  simulation-db:
    image: postgres
    ports:
      - "5436:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=admin
      - POSTGRES_DB=simulation-db
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d simulation-db"]
      interval: 5s
      timeout: 5s
      retries: 10
    volumes:
      - simulation-db-data:/var/lib/postgresql/data
    networks:
      - microservices

  ms-customer:
    image: tomasmanriquez480/ms-customer:latest
    platform: "linux/amd64"
    ports:
      - "8081:8081"
    depends_on:
      config-server:
        condition: service_healthy
      eureka-server:
        condition: service_healthy
      customer-db:
        condition: service_healthy
    env_file:
      - ./env/customer.env
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8081/actuator/health" ]
      interval: 5s
      timeout: 3s
      retries: 10
    networks:
      - microservices

  ms-executive:
    image: tomasmanriquez480/ms-executive:latest
    platform: "linux/amd64"
    ports:
      - "8082:8082"
    depends_on:
      config-server:
        condition: service_healthy
      eureka-server:
        condition: service_healthy
      executive-db:
        condition: service_healthy
    env_file:
      - ./env/executive.env
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8082/actuator/health" ]
      interval: 5s
      timeout: 3s
      retries: 10
    networks:
      - microservices

  ms-loan:
    image: tomasmanriquez480/ms-loan:latest
    platform: "linux/amd64"
    ports:
      - "8083:8083"
    depends_on:
      config-server:
        condition: service_healthy
      eureka-server:
        condition: service_healthy
      loan-db:
        condition: service_healthy
    env_file:
      - ./env/loan.env
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8083/actuator/health" ]
      interval: 5s
      timeout: 3s
      retries: 10
    networks:
      - microservices

  ms-request:
    image: tomasmanriquez480/ms-request:latest
    platform: "linux/amd64"
    ports:
      - "8084:8084"
    depends_on:
      config-server:
        condition: service_healthy
      eureka-server:
        condition: service_healthy
      request-db:
        condition: service_healthy
    env_file:
      - ./env/request.env
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8084/actuator/health" ]
      interval: 5s
      timeout: 3s
      retries: 10
    networks:
      - microservices

  ms-simulation:
    image: tomasmanriquez480/ms-simulation:latest
    platform: "linux/amd64"
    ports:
      - "8085:8085"
    depends_on:
      config-server:
        condition: service_healthy
      eureka-server:
        condition: service_healthy
      simulation-db:
        condition: service_healthy
    env_file:
      - ./env/simulation.env
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8085/actuator/health" ]
      interval: 5s
      timeout: 3s
      retries: 10
    networks:
      - microservices

  frontend-ms:
    image: tomasmanriquez480/frontend-ms:latest
    platform: "linux/amd64"
    ports:
      - "80:80"
    depends_on:
      # gateway-server is likely what it truly depends on for APIs
      gateway-server:
        condition: service_healthy
      # Uncomment below if needed
      # config-server:
      #   condition: service_healthy
      # eureka-server:
      #   condition: service_healthy
    env_file:
      - ./env/frontend.env
    networks:
      - microservices

volumes:
  customer-db-data:
  executive-db-data:
  loan-db-data:
  request-db-data:
  simulation-db-data:

networks:
  microservices:
    driver: bridge
