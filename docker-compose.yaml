version: "3.9"

services:
  config-server:
    image: tomasmanriquez480/config-server:latest
    platform: "linux/arm64"
    ports:
      - "8888:8888"
    networks:
      - microservices


  eureka-server:
    image: tomasmanriquez480/eureka-server:latest
    platform: "linux/arm64"
    ports:
      - "8761:8761"
    env_file:
      - ./env/eureka.env
    networks:
      - microservices
    depends_on:
      - config-server

  gateway-server:
    image: tomasmanriquez480/gateway-server:latest
    platform: "linux/arm64"
    ports:
      - "8081:8081"
    env_file:
      - ./env/gateway.env
    networks:
      - microservices

  customer-db:
    image: postgres
    ports:
      - "5440:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=admin
      - POSTGRES_DB=customer-db
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d customer-db"]
      interval: 5s
      timeout: 5s
      retries: 10
    volumes:
      - customer-db-data:/var/lib/postgresql/data
    networks:
      - microservices

  executive-db:
    image: postgres
    ports:
      - "5441:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=admin
      - POSTGRES_DB=executive-db
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d executive-db"]
      interval: 5s
      timeout: 5s
      retries: 10
    volumes:
      - executive-db-data:/var/lib/postgresql/data
    networks:
      - microservices

  loan-db:
    image: postgres
    ports:
      - "5442:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=admin
      - POSTGRES_DB=loan-db
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d loan-db"]
      interval: 5s
      timeout: 5s
      retries: 10
    volumes:
      - loan-db-data:/var/lib/postgresql/data
    networks:
      - microservices

  request-db:
    image: postgres
    ports:
      - "5443:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=admin
      - POSTGRES_DB=request-db
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d request-db"]
      interval: 5s
      timeout: 5s
      retries: 10
    volumes:
      - request-db-data:/var/lib/postgresql/data
    networks:
      - microservices

  simulation-db:
    image: postgres
    ports:
      - "5444:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=admin
      - POSTGRES_DB=simulation-db
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d simulation-db"]
      interval: 5s
      timeout: 5s
      retries: 10
    volumes:
      - simulation-db-data:/var/lib/postgresql/data
    networks:
      - microservices

  ms-customer:
    image: tomasmanriquez480/ms-customer:latest
    platform: "linux/arm64"
    ports:
      - "8081:8081"
    env_file:
      - ./env/customer.env
    networks:
      - microservices

  ms-executive:
    image: tomasmanriquez480/ms-executive:latest
    platform: "linux/arm64"
    ports:
      - "8082:8082"
    env_file:
      - ./env/executive.env
    networks:
      - microservices

  ms-loan:
    image: tomasmanriquez480/ms-loan:latest
    platform: "linux/arm64"
    ports:
      - "8083:8083"
    env_file:
      - ./env/loan.env
    networks:
      - microservices

  ms-request:
    image: tomasmanriquez480/ms-request:latest
    platform: "linux/arm64"
    ports:
      - "8084:8084"
    env_file:
      - ./env/request.env
    networks:
      - microservices

  ms-simulation:
    image: tomasmanriquez480/ms-simulation:latest
    platform: "linux/arm64"
    ports:
      - "8085:8085"
    env_file:
      - ./env/simulation.env
    networks:
      - microservices

  frontend-ms:
    image: tomasmanriquez480/frontend-ms:latest
    platform: "linux/arm64"
    ports:
      - "80:80"
    env_file:
      - ./env/frontend.env
    networks:
      - microservices

  loki:
    image: grafana/loki:latest
    ports:
      - "3100:3100"
    volumes:
      - ./monitoring/loki/loki-config.yaml:/etc/loki/
      #local-config.yaml
    command: -config.file=/etc/loki/local-config.yaml

  promtail:
    image: grafana/promtail:latest
    volumes:
      - ./monitoring/promtail/promtail-config.yaml:/etc/promtail/config.yaml
      - /var/log:/var/log
    command: -config.file=/etc/promtail/config.yaml

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3001:3000"
    volumes:
      - ./monitoring/grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
      - ./monitoring/grafana/provisioning/alerting:/etc/grafana/provisioning/alerting
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_FEATURE_TOGGLES_ENABLE=alerting
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml

volumes:
  customer-db-data:
  executive-db-data:
  loan-db-data:
  request-db-data:
  simulation-db-data:

networks:
  microservices:
    driver: bridge